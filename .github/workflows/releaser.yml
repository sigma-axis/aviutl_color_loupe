name: Make Release
on:
  workflow_dispatch:
  push:
    tags:
    - '*'
    branches:
    - '*'

env:
  SOLUTION_NAME: color_loupe
  # Path to the solution file relative to the root of the project.

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release]
        platform: [x86]

    outputs:
      artifact: ${{ steps.name-artifact.outputs.artifact }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1


    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }} ${{ env.SOLUTION_NAME }}.sln

    - name: Pack into a folder
      run: |
        mkdir pack
        copy ${{ matrix.configuration }}/*.auf pack
        copy assets/*.ini pack
        copy *.md pack
        copy LICENSE pack
      # pick up and add any files you may need.

    - name: Name artifact
      id: name-artifact
      shell: bash
      run: |
        echo "artifact=${{ env.SOLUTION_NAME }}-${{ github.ref_name }}_${{ matrix.platform }}${{ matrix.configuration }}" >> $GITHUB_OUTPUT

    - name: Upload the build as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.name-artifact.outputs.artifact }}
        path: pack/*

  release:
    name: Release
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.artifact }}
        path: artifacts

    - name: Compress
      run: |
        cd artifacts
        zip -r assets.zip *

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        body: |
          ### ${{ github.ref }}
          
          - （追記予定）

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/assets.zip
        asset_name: aviutl_${{ env.SOLUTION_NAME }}-${{ github.ref }}.zip
        asset_content_type: application/zip
